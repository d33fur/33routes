version: '3.8'

services:
  33routes-postgres:
    container_name: 33routes-postgres
    image: postgres:17-alpine
    env_file: 
      - .env
    volumes:
      - ./database/postgres/init:/docker-entrypoint-initdb.d
      - ./database/postgres/data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - user-network
        
  33routes-redis:
    container_name: 33routes-redis
    image: redis:7-alpine
    volumes:
      - ./database/redis/data:/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - user-network

  # 33routes-auth-service:
  #   container_name: 33routes-auth-service
  #   build:
  #     context: ./auth-service
  #     dockerfile: Dockerfile
  #   env_file: 
  #     - .env
  #   depends_on:
  #     33routes-postgres:
  #       condition: service_healthy
  #     33routes-redis:
  #       condition: service_healthy
  #   ports:
  #     - "8001:8001"
  #   restart: always
  #   networks:
  #     - user-network

networks:
  user-network:
    driver: bridge
  # admin-network:
  #   driver: bridge